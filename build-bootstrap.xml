<project name="fbme_bootstrap" default="build">
  <!-- Generated by MPS -->
  <property name="build.dir" location="build" />
  <property name="build.tmp" location="${build.dir}/tmp/fbme_bootstrap" />
  <property name="build.layout" location="${build.dir}/artifacts/fbme_bootstrap" />
  <property name="mps_home" location="${basedir}/lib/MPS 2021.3" />
  <property name="artifacts.mps" location="${mps_home}" />
  <property name="artifacts.fbme_source_plugins" location="${build.dir}/artifacts/fbme_source_plugins" />
  <property name="artifacts.fbme_platform" location="code/platform/build/artifacts/fbme_platform" />
  <property name="artifacts.fbme_language" location="code/language/build/artifacts/fbme_language" />
  <property name="artifacts.fbme_richediting" location="code/richediting/build/artifacts/fbme_richediting" />
  <property name="artifacts.fbme_fordiac" location="code/4diac-integration/build/artifacts/fbme_fordiac" />
  <property name="artifacts.fbme_smvdebugger" location="code/smv-debugger/build/artifacts/fbme_smvdebugger" />
  <property name="artifacts.fbme_debugger" location="code/debugger/build/artifacts/fbme_debugger" />
  <property name="artifacts.fbme_nxt" location="code/nxt-integration/build/artifacts/fbme_nxt" />
  <property file="${artifacts.mps}/build.properties" prefix="import.mps" />
  <property file="${artifacts.fbme_platform}/build.properties" prefix="import.fbme_platform" />
  <property file="${artifacts.fbme_richediting}/build.properties" prefix="import.fbme_richediting" />
  <property file="${artifacts.fbme_fordiac}/build.properties" prefix="import.fbme_fordiac" />
  <property file="${artifacts.fbme_smvdebugger}/build.properties" prefix="import.fbme_smvdebugger" />
  <property file="${artifacts.fbme_debugger}/build.properties" prefix="import.fbme_debugger" />
  <property file="${artifacts.fbme_nxt}/build.properties" prefix="import.fbme_nxt" />
  <property name="mps.build.number" value="${import.mps.mps.build.number}" />
  <property name="mps.date" value="${import.mps.mps.date}" />
  <property name="mps.build.vcs.number" value="${import.mps.mps.build.vcs.number}" />
  <property name="mps.teamcity.buildConfName" value="${import.mps.mps.teamcity.buildConfName}" />
  <property name="mps.idea.platform.build.number" value="${import.mps.mps.idea.platform.build.number}" />
  <property name="mps.mps.build.counter" value="${import.mps.mps.mps.build.counter}" />
  <property name="mpsBootstrapCore.version.major" value="${import.mps.mpsBootstrapCore.version.major}" />
  <property name="mpsBootstrapCore.version.minor" value="${import.mps.mpsBootstrapCore.version.minor}" />
  <property name="mpsBootstrapCore.version.bugfixNr" value="${import.mps.mpsBootstrapCore.version.bugfixNr}" />
  <property name="mpsBootstrapCore.version.eap" value="${import.mps.mpsBootstrapCore.version.eap}" />
  <property name="mpsBootstrapCore.version" value="${import.mps.mpsBootstrapCore.version}" />
  <property name="fbme_platform.ide-version" value="${import.fbme_platform.fbme_platform.ide-version}" />
  <property name="fbme_language.ide-version" value="${import.fbme_platform.fbme_language.ide-version}" />
  <property name="fbme_richediting.ide-version" value="${import.fbme_richediting.fbme_richediting.ide-version}" />
  <property name="fbme_fordiac.ide-version" value="${import.fbme_fordiac.fbme_fordiac.ide-version}" />
  <property name="fbme_smvdebugger.ide-version" value="${import.fbme_smvdebugger.fbme_smvdebugger.ide-version}" />
  <property name="fbme_debugger.ide-version" value="${import.fbme_debugger.fbme_debugger.ide-version}" />
  <property name="fbme_nxt.ide-version" value="${import.fbme_nxt.fbme_nxt.ide-version}" />
  <property name="mps.generator.skipUnmodifiedModels" value="false" />
  <property name="mps.ant.log" value="warn" />
  
  <path id="path.mps.ant.path">
    <pathelement location="${mps_home}/lib/ant/lib/ant-mps.jar" />
    <fileset dir="${mps_home}/lib">
      <include name="util.jar" />
      <include name="3rd-party-rt.jar" />
    </fileset>
  </path>
  
  <taskdef resource="jetbrains/mps/build/ant/antlib.xml" classpathref="path.mps.ant.path" />
  
  <generator-settings id="m2m-defaults" strictMode="true" parallelThreads="8" inplaceTransform="false" warnWrongChild="true" createStaticRefs="true" skipUnmodifiedModels="${mps.generator.skipUnmodifiedModels}" />
  
  <target name="assemble" depends="declare-mps-tasks">
    <mkdir dir="${build.layout}" />
    <echo file="${build.layout}/build.properties">mps.build.number=${mps.build.number}${line.separator}mps.date=${mps.date}${line.separator}mps.build.vcs.number=${mps.build.vcs.number}${line.separator}mps.teamcity.buildConfName=${mps.teamcity.buildConfName}${line.separator}mps.idea.platform.build.number=${mps.idea.platform.build.number}${line.separator}mps.mps.build.counter=${mps.mps.build.counter}${line.separator}mpsBootstrapCore.version.major=${mpsBootstrapCore.version.major}${line.separator}mpsBootstrapCore.version.minor=${mpsBootstrapCore.version.minor}${line.separator}mpsBootstrapCore.version.bugfixNr=${mpsBootstrapCore.version.bugfixNr}${line.separator}mpsBootstrapCore.version.eap=${mpsBootstrapCore.version.eap}${line.separator}mpsBootstrapCore.version=${mpsBootstrapCore.version}${line.separator}fbme_platform.ide-version=${fbme_platform.ide-version}${line.separator}fbme_language.ide-version=${fbme_language.ide-version}${line.separator}fbme_richediting.ide-version=${fbme_richediting.ide-version}${line.separator}fbme_fordiac.ide-version=${fbme_fordiac.ide-version}${line.separator}fbme_smvdebugger.ide-version=${fbme_smvdebugger.ide-version}${line.separator}fbme_debugger.ide-version=${fbme_debugger.ide-version}${line.separator}fbme_nxt.ide-version=${fbme_nxt.ide-version}</echo>
  </target>
  
  <target name="buildDependents">
    <ant antfile="build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/language/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/platform/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/richediting/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/4diac-integration/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/smv-debugger/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/debugger/build.xml" inheritAll="false" useNativeBasedir="true" />
    <ant antfile="code/nxt-integration/build.xml" inheritAll="false" useNativeBasedir="true" />
  </target>
  
  <target name="fetchDependencies" />
  
  <target name="build" depends="assemble" />
  
  <target name="clean">
    <delete dir="${build.tmp}" />
    <delete dir="${build.layout}" />
  </target>
  
  <target name="generate" depends="declare-mps-tasks, fetchDependencies">
    <echo message="generating" />
    <generate fork="true" logLevel="${mps.ant.log}">      
      <settings refid="m2m-defaults" />
      <plugin path="${artifacts.mps}/plugins/mps-build" />
      <plugin path="${artifacts.mps}/plugins/mps-core" />
      <library file="${artifacts.mps}/languages/baseLanguage/closures.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/collections.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.blTypes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.classifiers.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.closures.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.collections.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.javadoc.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk7.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.jdk8.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.references.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.regexp.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.scopes.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.tuples.runtime.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguage.util.jar" />
      <library file="${artifacts.mps}/languages/baseLanguage/jetbrains.mps.baseLanguageInternal.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.editing.runtime.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.editor.runtime.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.editorlang.runtime.jar" />
      <library file="${artifacts.mps}/languages/editor/jetbrains.mps.ide.editor.jar" />
      <library file="${artifacts.mps}/languages/editor/typesystemIntegration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.baseLanguage.lightweightdsl.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.actions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.behavior.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.checkedName.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.kinds.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.constraints.rules.skeleton.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.context.defs.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.context.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.core.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.dataFlow.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.editor.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.findUsages.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.generationContext.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.generator.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.intentions.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.migration.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.modelapi.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.pattern.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.plugin.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.project.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.quotation.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.refactoring.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.resources.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.scopes.runtime.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.script.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.sharedConcepts.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.smodel.query.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.structure.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.textGen.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.traceable.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.lang.typesystem.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.refactoring.participant.jar" />
      <library file="${artifacts.mps}/languages/languageDesign/jetbrains.mps.typesystemEngine.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.facets.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.make.runtime.jar" />
      <library file="${artifacts.mps}/languages/make/jetbrains.mps.smodel.resources.jar" />
      <library file="${artifacts.mps}/languages/mps-stubs.jar" />
      <library file="${artifacts.mps}/languages/plaf/jetbrains.mps.baseLanguage.search.jar" />
      <library file="${artifacts.mps}/languages/plaf/jetbrains.mps.ide.platform.jar" />
      <library file="${artifacts.mps}/languages/plaf/jetbrains.mps.ide.refactoring.platform.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.analyzers.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.dataFlow.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.findUsages.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.behavior.api.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.migration.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.lang.smodel.query.runtime.jar" />
      <library file="${artifacts.mps}/languages/runtimes/jetbrains.mps.refactoring.runtime.jar" />
      <library file="${artifacts.mps}/languages/text/jetbrains.mps.lang.text.jar" />
      <library file="${artifacts.mps}/languages/tools/jetbrains.mps.core.tool.environment.jar" />
      <library file="${artifacts.mps}/languages/tools/jetbrains.mps.tool.common.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.java.stub.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.kernel.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.lang.makeup.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.project.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.refactoring.jar" />
      <library file="${artifacts.mps}/languages/util/jetbrains.mps.runtime.jar" />
      <library file="${artifacts.mps}/languages/xml/jetbrains.mps.core.xml.jar" />
      <chunk>
        <module file="${basedir}/code/debugger/buildsolution/org.fbme.debugger.build.msd" />
        <module file="${basedir}/buildscripts/org.fbme.ide.build.msd" />
        <module file="${basedir}/buildscripts/plugins/org.fbme.ide.build.plugins.msd" />
        <module file="${basedir}/code/4diac-integration/buildsolution/org.fbme.integration.fordiac.build.msd" />
        <module file="${basedir}/code/nxt-integration/buildsolution/org.fbme.integration.nxt.build.msd" />
        <module file="${basedir}/code/language/buildsolution/org.fbme.language.build.msd" />
        <module file="${basedir}/code/platform/buildsolution/org.fbme.platform.build.msd" />
        <module file="${basedir}/code/richediting/buildsolution/org.fbme.richediting.build.msd" />
        <module file="${basedir}/samples/statistics-plugin/buildsolution/org.fbme.samples.statisticsPlugin.build.msd" />
        <module file="${basedir}/code/smv-debugger/buildsolution/org.fbme.smvDebugger.build.msd" />
      </chunk>
      <jvmargs>
        <arg value="-ea" />
        <arg value="-Xmx512m" />
      </jvmargs>
      <macro name="mps_home" path="${mps_home}" />
    </generate>
  </target>
  
  <target name="declare-mps-tasks" />
  
  <target name="makeDependents">
    <ant antfile="build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/language/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/platform/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/richediting/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/4diac-integration/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/smv-debugger/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/debugger/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
    <ant antfile="code/nxt-integration/build.xml" inheritAll="false" useNativeBasedir="true">
      <target name="generate" />
      <target name="assemble" />
    </ant>
  </target>
  
  <target name="java.compile.org.fbme.ide.build.plugins">
    <mkdir dir="${basedir}/buildscripts/plugins/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
    <javac destdir="${build.tmp}/java/out/org.fbme.ide.build.plugins" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/buildscripts/plugins/source_gen" />
      </src>
      <classpath />
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.ide.build" depends="java.compile.org.fbme.debugger.build, java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.integration.fordiac.build, java.compile.org.fbme.integration.nxt.build, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build, java.compile.org.fbme.richediting.build, java.compile.org.fbme.samples.statisticsPlugin.build, java.compile.org.fbme.smvDebugger.build">
    <mkdir dir="${basedir}/buildscripts/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.ide.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.ide.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/buildscripts/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.debugger.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.integration.fordiac.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.integration.nxt.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.richediting.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.samples.statisticsPlugin.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.smvDebugger.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.language.build" depends="java.compile.org.fbme.ide.build.plugins">
    <mkdir dir="${basedir}/code/language/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.language.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.language.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/language/buildsolution/source_gen" />
      </src>
      <classpath path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.platform.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build">
    <mkdir dir="${basedir}/code/platform/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.platform.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.platform.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/platform/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.integration.nxt.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build, java.compile.org.fbme.richediting.build">
    <mkdir dir="${basedir}/code/nxt-integration/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.integration.nxt.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.integration.nxt.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/nxt-integration/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.richediting.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.java.modules.cycle.1" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build">
    <mkdir dir="${build.tmp}/java.modules.cycle.1" />
    <javac destdir="${build.tmp}/java.modules.cycle.1" fork="true" encoding="utf8" nowarn="true" includeantruntime="false">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/debugger/buildsolution/source_gen" />
        <path location="${basedir}/code/richediting/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.debugger.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build, java.compile.java.modules.cycle.1">
    <mkdir dir="${basedir}/code/debugger/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.debugger.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.debugger.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/debugger/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
        <pathelement path="${build.tmp}/java.modules.cycle.1" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.richediting.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build, java.compile.java.modules.cycle.1">
    <mkdir dir="${basedir}/code/richediting/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.richediting.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.richediting.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/richediting/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
        <pathelement path="${build.tmp}/java.modules.cycle.1" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.integration.fordiac.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build">
    <mkdir dir="${basedir}/code/4diac-integration/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.integration.fordiac.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.integration.fordiac.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/4diac-integration/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.smvDebugger.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build, java.compile.org.fbme.richediting.build">
    <mkdir dir="${basedir}/code/smv-debugger/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.smvDebugger.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.smvDebugger.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/code/smv-debugger/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.richediting.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="java.compile.org.fbme.samples.statisticsPlugin.build" depends="java.compile.org.fbme.ide.build.plugins, java.compile.org.fbme.language.build, java.compile.org.fbme.platform.build">
    <mkdir dir="${basedir}/samples/statistics-plugin/buildsolution/source_gen" />
    <mkdir dir="${build.tmp}/java/out/org.fbme.samples.statisticsPlugin.build" />
    <javac destdir="${build.tmp}/java/out/org.fbme.samples.statisticsPlugin.build" fork="true" encoding="utf8" includeantruntime="false" debug="true">
      <compilerarg value="-Xlint:none" />
      <src>
        <path location="${basedir}/samples/statistics-plugin/buildsolution/source_gen" />
      </src>
      <classpath>
        <pathelement path="${build.tmp}/java/out/org.fbme.ide.build.plugins" />
        <pathelement path="${build.tmp}/java/out/org.fbme.language.build" />
        <pathelement path="${build.tmp}/java/out/org.fbme.platform.build" />
      </classpath>
    </javac>
  </target>
  
  <target name="cleanSources">
    <delete dir="${basedir}/code/debugger/buildsolution/source_gen" />
    <delete dir="${basedir}/buildscripts/source_gen" />
    <delete dir="${basedir}/buildscripts/plugins/source_gen" />
    <delete dir="${basedir}/code/4diac-integration/buildsolution/source_gen" />
    <delete dir="${basedir}/code/nxt-integration/buildsolution/source_gen" />
    <delete dir="${basedir}/code/language/buildsolution/source_gen" />
    <delete dir="${basedir}/code/platform/buildsolution/source_gen" />
    <delete dir="${basedir}/code/richediting/buildsolution/source_gen" />
    <delete dir="${basedir}/samples/statistics-plugin/buildsolution/source_gen" />
    <delete dir="${basedir}/code/smv-debugger/buildsolution/source_gen" />
  </target>
</project>